import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class BERAN extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b5061079b806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063202e49361461005c57806379a789bb1461010b578063d94e30a3146101d4575b600080fd5b34801561006857600080fd5b50610109600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506102b6565b005b34801561011757600080fd5b506101b8600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061033a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156101e057600080fd5b5061023b600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105b8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027b578082015181840152602081019050610260565b50505050905090810190601f1680156102a85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b806000836040518082805190602001908083835b6020831015156102ef57805182526020820191506020810190506020830392506102ca565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090805190602001906103359291906106ca565b505050565b600080826040516020018080602001828103825283818151815260200191508051906020019080838360005b83811015610381578082015181840152602081019050610366565b50505050905090810190601f1680156103ae5780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040526040518082805190602001908083835b6020831015156103f757805182526020820191506020810190506020830392506103d2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000856040518082805190602001908083835b602083101515610460578051825260208201915060208101905060208303925061043b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020604051602001808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561051f5780601f106104f45761010080835404028352916020019161051f565b820191906000526020600020905b81548152906001019060200180831161050257829003601f168201915b5050925050506040516020818303038152906040526040518082805190602001908083835b6020831015156105695780518252602082019150602081019050602083039250610544565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614156105a957600190506105ae565b600090505b8091505092915050565b6060600080836040518082805190602001908083835b6020831015156105f357805182526020820191506020810190506020830392506105ce565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061070b57805160ff1916838001178555610739565b82800160010185558215610739579182015b8281111561073857825182559160200191906001019061071d565b5b509050610746919061074a565b5090565b61076c91905b80821115610768576000816000905550600101610750565b5090565b905600a165627a7a723058200b614e74e0ffde14ac7c25c75675285a5940332024abb69b18584c393da13e340029\r\n";

    public static final String FUNC_UPLOAD = "upload";

    public static final String FUNC_CALL = "call";

    public static final String FUNC_ADD_MATCH = "ADD_match";

    @SuppressWarnings("deprecation")
	protected BERAN(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @SuppressWarnings("deprecation")
	protected BERAN(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<TransactionReceipt> upload(String _BCADD, String _ADD) {
        final Function function = new Function(
                FUNC_UPLOAD, 
                Arrays.<Type>asList(new Utf8String(_BCADD),
                new Utf8String(_ADD)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> call(String _BCADD, String _ADD) {
        final Function function = new Function(FUNC_CALL, 
                Arrays.<Type>asList(new Utf8String(_BCADD),
                new Utf8String(_ADD)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> ADD_match(String _BCADD) {
        final Function function = new Function(FUNC_ADD_MATCH, 
                Arrays.<Type>asList(new Utf8String(_BCADD)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<BERAN> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(BERAN.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<BERAN> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(BERAN.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static BERAN load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new BERAN(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static BERAN load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new BERAN(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
